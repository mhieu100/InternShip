from faker import Faker
from datetime import datetime, timedelta
import random
import redis
import json
import time

fake = Faker('es_ES')

# K·∫øt n·ªëi Redis
r = redis.Redis(host='localhost', port=6379, db=0)

start_time = datetime.strptime("07:00:00", "%H:%M:%S")

shelves = [
    "1",
    "2",
    "3",
    "4",
    "5"
]

# Initialize alert counts for each shelf
# S·ª≠ d·ª•ng m·ªôt dictionary ƒë·ªÉ l∆∞u s·ªë l·∫ßn c·∫£nh b√°o trong m·ªói gi·ªù
shelf_alert_counts_per_hour = {shelf: 0 for shelf in shelves}
# L∆∞u th·ªùi gian b·∫Øt ƒë·∫ßu c·ªßa m·ªói gi·ªù
last_hour_start_time = start_time

num_batches = 5200

# ƒê·∫∑t gi·ªõi h·∫°n s·ªë l·∫ßn c·∫£nh b√°o m·ªói gi·ªù cho m·ªói k·ªá
ALERT_LIMIT_PER_HOUR = 5

for batch in range(num_batches):
    current_datetime = start_time + timedelta(seconds=batch * 5)
    current_time_str = current_datetime.strftime("%H:%M:%S")
    operating_hours = (current_datetime.hour - start_time.hour) + 1

    # Ki·ªÉm tra v√† reset b·ªô ƒë·∫øm c·∫£nh b√°o n·∫øu ƒë√£ sang gi·ªù m·ªõi
    if current_datetime.hour != last_hour_start_time.hour:
        shelf_alert_counts_per_hour = {shelf: 0 for shelf in shelves}
        last_hour_start_time = current_datetime

    for shelf in shelves:
        is_alerted = False
        osa_rate = fake.random_int(min=10, max=90)

        # Logic ƒë·ªÉ gi·ªõi h·∫°n s·ªë l·∫ßn c·∫£nh b√°o
        # Ch·ªâ t·∫°o c·∫£nh b√°o n·∫øu s·ªë l·∫ßn c·∫£nh b√°o trong gi·ªù hi·ªán t·∫°i ch∆∞a ƒë·∫°t gi·ªõi h·∫°n
        # v√† c√≥ 15% x√°c su·∫•t t·∫°o c·∫£nh b√°o (ƒë·ªÉ tr√°nh t·∫°o c·∫£nh b√°o li√™n t·ª•c)
        if shelf_alert_counts_per_hour[shelf] < ALERT_LIMIT_PER_HOUR:
            # TƒÉng x√°c su·∫•t x·∫£y ra c·∫£nh b√°o ·ªü m·ª©c th·∫•p (v√≠ d·ª•: 15%)
            if random.random() < 0.15:
                is_alerted = True
                osa_rate = fake.random_int(min=0, max=30) # osa_rate th·∫•p ƒë·ªÉ k√≠ch ho·∫°t alert
                shelf_alert_counts_per_hour[shelf] += 1

        # N·∫øu kh√¥ng c√≥ c·∫£nh b√°o, t·∫°o osa_rate b√¨nh th∆∞·ªùng
        if not is_alerted:
            osa_rate = fake.random_int(min=41, max=90)

        # T√≠nh to√°n shortage_hours d·ª±a tr√™n operating_hours
        shortage_hours = round(random.uniform(0.1, operating_hours * 0.4), 1)

        record = {
            "shelfId": shelf,
            "operatingHours": operating_hours,
            "shortageHours": shortage_hours,
            "alertCount": shelf_alert_counts_per_hour[shelf], # S·ª≠ d·ª•ng b·ªô ƒë·∫øm m·ªõi
            "replenishCount": fake.random_int(min=0, max=shelf_alert_counts_per_hour[shelf]),
            "osaRate": osa_rate,
            "threshold": 40,
            "isAlerted": is_alerted,
            "date": "2025-08-15",
            "time": current_time_str
        }

        r.publish("data_stream", json.dumps(record, ensure_ascii=False))
        print(f"üì¢ [{current_time_str}] Shelf {shelf} ‚Üí Publish record l√™n Redis Pub/Sub. Alerted: {is_alerted}")

    time.sleep(0.1)